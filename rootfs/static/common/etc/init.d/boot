#!/bin/sh

#   ---------------------------------------------
#   Create GPIO Control Device
#   arg1 : GPIO Port Number
#   arg2 : Device Name
#   arg3 : Direction
#   ---------------------------------------------
create_gpio()
{
    case $3 in
    in )    echo $1 > /sys/class/gpio/export
            echo in > /sys/class/gpio/gpio$1/direction
            if [ $4 = low ]
            then
				echo 1 > /sys/class/gpio/gpio$1/active_low
			else
				echo 0 > /sys/class/gpio/gpio$1/active_low
			fi
            ln -s /sys/class/gpio/gpio$1/value /dev/$2;;
    out )   echo $1 > /sys/class/gpio/export
            echo out > /sys/class/gpio/gpio$1/direction
            if [ $4 = low ]
            then
				echo 1 > /sys/class/gpio/gpio$1/active_low
			else
				echo 0 > /sys/class/gpio/gpio$1/active_low
			fi
            if [ $5 = on ]
            then
				echo 1 > /sys/class/gpio/gpio$1/value
			else
				echo 0 > /sys/class/gpio/gpio$1/value
			fi
            ln -s /sys/class/gpio/gpio$1/value /dev/$2;;
    esac
}

boot_setgpio()
{
	#   ---------------------------------------------
	#   GPIO
	#   ---------------------------------------------
	create_gpio 15 factory_reset	in 	low
	create_gpio 77 nf_wp			out	low		off
	create_gpio 81 gps_rst			out low		off
	create_gpio 85 led_status		out low		off
	create_gpio 78 mdm_power_on 	out high	off 
	create_gpio 49 mdm_on			out low		on
	create_gpio 50 mdm_reset		out low		on
	create_gpio 54 power_hold		out high	on
	create_gpio 47 sw_state			in  low		
}

boot_setconfig()
{
	#   ---------------------------------------------
	#   Set default configuration
	#   ---------------------------------------------
	cp -r /etc/configs/* /tmp
	
}

. /lib/functions/ftmenv.sh

boot_setgpio
boot_setconfig

hostname $(get_model)
